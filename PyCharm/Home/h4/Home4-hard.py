# –ó–∞–¥–∞–Ω–∏–µ-1:
# –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –≤—ã–ø–æ–ª–Ω—è—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ) —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –¥—Ä–æ–±—è–º–∏.
# –î—Ä–æ–±–∏ –≤–≤–æ–¥—è—Ç—Å—è –∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
# n x/y ,–≥–¥–µ n - —Ü–µ–ª–∞—è —á–∞—Å—Ç—å, x - —á–∏—Å–ª–∏—Ç–µ–ª—å, —É - –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å.
# –î—Ä–æ–±–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –Ω–µ –∏–º–µ—Ç—å —Ü–µ–ª–æ–π —á–∞—Å—Ç–∏, –∏–ª–∏ –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ —Ü–µ–ª—É—é —á–∞—Å—Ç—å.
# –ü—Ä–∏–º–µ—Ä—ã:
# –í–≤–æ–¥: 5/6 + 4/7 (–≤—Å—ë –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤–≤–æ–¥–∏—Ç—Å—è —Ü–µ–ª–∏–∫–æ–º –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏)
# –í—ã–≤–æ–¥: 1 17/42  (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∏ –≤—ã–¥–µ–ª–∏—Ç—å —Ü–µ–ª—É—é —á–∞—Å—Ç—å)
# –í–≤–æ–¥: -2/3 - -2
# –í—ã–≤–æ–¥: 1 1/3
import re
x = input()
print(x)
print(eval(x))
pattern = '[0-9]'
found = re.findall()
from fractions import Fraction
from decimal import Decimal
Fraction(Decimal('7.7'))
Fraction(77, 10)
# for i,j in enumerate(x):
#     print(i,j)
#
# import regex  # $ pip install regex
# text = '5/6 + 4/7 - 1 17/42'  # 6 code points
# print(ascii(text))
#'\u044f \U0001f602 \u0435\u0308'
# regex.findall(r'\X', text)  # 5 grapheme clusters
#['—è', ' ', 'üòÇ', ' ', '–µÃà']


# print(x[1]+'2')
# –ó–∞–¥–∞–Ω–∏–µ-2:
# –î–∞–Ω–∞ –≤–µ–¥–æ–º–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–∞ –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã (—Ñ–∞–π–ª "data/workers").
# –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –∑–∞—Ä–ø–ª–∞—Ç—É –≤—Å–µ—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤, –∑–Ω–∞—è —á—Ç–æ –æ–Ω–∏ –ø–æ–ª—É—á–∞—Ç –ø–æ–ª–Ω—ã–π –æ–∫–ª–∞–¥,
# –µ—Å–ª–∏ –æ—Ç—Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º—É —á–∞—Å–æ–≤. –ï—Å–ª–∏ –∂–µ –æ–Ω–∏ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏ –º–µ–Ω—å—à–µ –Ω–æ—Ä–º—ã,
# —Ç–æ –∏—Ö –ó–ü —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –∞ –∑–∞ –∑–∞–∂–¥—ã–π —á–∞—Å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏
# –æ–Ω–∏ –ø–æ–ª—É—á–∞—é—Ç —É–¥–≤–æ–µ–Ω–Ω—É—é –ó–ü, –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –Ω–æ—Ä–º–µ.
# –ö–æ–ª-–≤–æ —á–∞—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω—ã, —É–∫–∞–∑–∞–Ω—ã –≤ —Ñ–∞–π–ª–µ "data/hours_of"

# import os
#
# path = os.path.join('workers')
# f = open(path, 'r', encoding='UTF-8')
# print(f.readlines())
# f.close()
# info = zip(f).split()
# print(info)
# –ó–∞–¥–∞–Ω–∏–µ-3:
# –î–∞–Ω —Ñ–∞–π–ª ("data/fruits") —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ—Ä—É–∫—Ç–æ–≤.
# –ó–∞–ø–∏—Å–∞—Ç—å –≤ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –≤—Å–µ —Ñ—Ä—É–∫—Ç—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –±—É–∫–≤—ã.
# –¢.–µ. –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ –±—É–¥—É—Ç –≤—Å–µ —Ñ—Ä—É–∫—Ç—ã –Ω–∞ –±—É–∫–≤—É ‚Äú–ê‚Äù, –≤–æ –≤—Ç–æ—Ä–æ–º –Ω–∞ ‚Äú–ë‚Äù –∏ —Ç.–¥.
# –§–∞–π–ª—ã –Ω–∞–∑–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
# –ü—Ä–∏–º–µ—Ä –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤: fruits_–ê, fruits_–ë, fruits_–í ‚Ä¶.
# –í–∞–∂–Ω–æ! –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –Ω–µ—Ç —Ñ—Ä—É–∫—Ç–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±—É–∫–≤.
# –ù–∞–ø–∏—à–∏—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª—é–±—ã–º —Å–ø–∏—Å–∫–æ–º —Ñ—Ä—É–∫—Ç–æ–≤
# –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å –ø–æ —Ñ–∞–π–ª–∞–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–≤—ã—Ö –±—É–∫–≤, –∏–º–µ—é—â–∏—Ö—Å—è –≤ —Å–ø–∏—Å–∫–µ —Ñ—Ä—É–∫—Ç–æ–≤.
# –ü–æ–¥—Å–∫–∞–∑–∫–∞:
# –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –±–æ–ª—å—à–∏—Ö –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞:
# print(list(map(chr, range(ord('–ê'), ord('–Ø')+1))))''–í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ä–∞–∑–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞'''
